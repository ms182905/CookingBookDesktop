<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>CookingBookApp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>CookingBookApp</name>
	<description>Cooking Book Application</description>
	<properties>
		<java.version>20</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>net.rgielen</groupId>
			<artifactId>javafx-weaver-spring-boot-starter</artifactId>
			<version>1.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>19.0.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>19.0.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>19.0.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.mashape.unirest</groupId>
			<artifactId>unirest-java</artifactId>
			<version>1.4.9</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.diffplug.spotless</groupId>
			<artifactId>spotless-lib</artifactId>
			<version>2.38.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.diffplug.spotless</groupId>
			<artifactId>spotless-lib-extra</artifactId>
			<version>2.38.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.diffplug.durian</groupId>
			<artifactId>durian-core</artifactId>
			<version>1.2.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.diffplug.durian</groupId>
			<artifactId>durian-collect</artifactId>
			<version>1.2.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-resources</artifactId>
			<version>1.2.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>6.5.0.202303070854-r</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.sonatype.plexus</groupId>
			<artifactId>plexus-build-api</artifactId>
			<version>0.0.7</version>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>2.36.0</version>
				<configuration>
					<java>
						<!-- These are the defaults, you can override if you want -->
						<includes>
							<include>src/main/java/**/*.java</include>
							<include>src/test/java/**/*.java</include>
						</includes>

						<!-- Cleanthat will refactor your code, but it may break your style: apply it before your formatter -->

						<googleJavaFormat>
							<version>1.10.0</version>                      <!-- optional, 1.8 is minimum supported version -->
							<style>GOOGLE</style>                       <!-- or AOSP (optional) -->
							<reflowLongStrings>true</reflowLongStrings> <!-- optional -->
<!--							&lt;!&ndash; optional: custom group artifact (you probably don't need this) &ndash;&gt;-->
<!--							<groupArtifact>com.google.googlejavaformat:google-java-format</groupArtifact>-->
						</googleJavaFormat>

						<importOrder /> <!-- standard import order -->
						<importOrder>  <!-- or a custom ordering -->
							<wildcardsLast>false</wildcardsLast> <!-- Optional, default false. Sort wildcard import after specific imports -->
							<order>java|javax,org,com,com.diffplug,,\#com.diffplug,\#</order>  <!-- or use <file>${project.basedir}/eclipse.importorder</file> -->
							<!-- you can use an empty string for all the imports you didn't specify explicitly, '|' to join group without blank line, and '\#` prefix for static imports. -->
						</importOrder>

						<removeUnusedImports>
							<engine>google-java-format</engine>    <!-- optional. Defaults to `google-java-format`. Can be switched to `cleanthat-javaparser-unnecessaryimport` (e.g. to process JDK17 source files with a JDK8+ Runtime) -->
						</removeUnusedImports>

						<formatAnnotations />  <!-- fixes formatting of type annotations, see below -->

						<licenseHeader>
							<content>/* (C)$YEAR */</content>  <!-- or <file>${project.basedir}/license-header</file> -->
						</licenseHeader>
					</java>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
